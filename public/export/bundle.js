!function(e){var t={};function i(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)i.d(n,o,function(t){return e[t]}.bind(null,o));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t),i.d(t,"initialize",(function(){return B}));class n{awakeAddContainer(){return document.getElementById("addContainer").style.visibility="visible"}hideAddContainer(){return document.getElementById("addContainer").style.visibility="hidden"}awakeSearchContainer(){return document.getElementById("searchContainer").style.visibility="visible"}hideSearchContainer(){return document.getElementById("searchContainer").style.visibility="hidden"}awakeFavoritesContainer(){return document.getElementById("favoriteMoviesContainer").style.visibility="visible"}hideFavoritesContainer(){return document.getElementById("favoriteMoviesContainer").style.visibility="hidden"}}class o{constructor(e,t,i,n,o){this.id=e,this.tooltipId="t"+e,this.title=t,this.year=i,this.genres=n,this.poster_path=o}}var r=function(e,t,i,n){return new(i||(i=Promise))((function(o,r){function a(e){try{l(n.next(e))}catch(e){r(e)}}function s(e){try{l(n.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))};class a{getGenreNames(e){return r(this,void 0,void 0,(function*(){let t=yield fetch("https://api.themoviedb.org/3/genre/movie/list?api_key=e73cc9a1d35973b3e89a34bba502663c");const i=[];if(t.ok){const n=(yield t.json()).genres;console.log(e),n.forEach(t=>{e.forEach(e=>{t.id===e&&i.push(t.name)})})}return i}))}}class s{constructor(e,t){this.id=e,this.favoritesButtonId="f"+e,this.favoritesButtonState=t}}class l{createMoviePackage(e,t){const i={id:e.id,tooltipId:e.tooltipId,title:e.title,year:e.year,genres:e.genres,poster_path:e.poster_path,favoritesButtonId:t.favoritesButtonId,favoritesButtonState:t.favoritesButtonState};return JSON.stringify(i)}unpackMoviePackage(){const e=[];for(let t=0;t<localStorage.length;t++){console.log(localStorage);let i=localStorage.key(t),n=localStorage.getItem(i),o=JSON.parse(n);e.push(o)}return e}addToStorage(e,t){const i=this.createMoviePackage(e,t),n=JSON.stringify(e.id);localStorage.setItem(""+n,""+i)}removeFromStorage(e){const t=JSON.stringify(e.id);localStorage.removeItem(""+t)}}var c=function(e,t,i,n){return new(i||(i=Promise))((function(o,r){function a(e){try{l(n.next(e))}catch(e){r(e)}}function s(e){try{l(n.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))};class d{constructor(){this.movieGenreServices=new a,this.localStorageService=new l}createTooltipData(e){return c(this,void 0,void 0,(function*(){if(e.genres){return new o(e.id,e.title,e.year,e.genres,e.poster_path)}{const t=yield this.movieGenreServices.getGenreNames(e.genre_ids),i=e.release_date.split("-")[0];return new o(e.id,e.title,i,t,e.poster_path)}}))}createTooltip(e,t){const i=document.getElementById(""+e.id),n=document.createElement("div"),o=document.createElement("h3"),r=document.createElement("h3"),a=document.createElement("button"),s=document.createElement("img");i.append(n),n.setAttribute("class","tooltip"),n.setAttribute("id",""+e.tooltipId),n.appendChild(o),n.appendChild(r),n.appendChild(a),a.appendChild(s),o.setAttribute("class","tooltipText"),r.setAttribute("class","tooltipText"),o.innerHTML=e.title,r.innerHTML=e.year,e.genres.forEach(e=>{let t=document.createElement("h3");n.appendChild(t),t.setAttribute("class","tooltipText"),t.setAttribute("class","thinText"),t.innerHTML=e}),a.setAttribute("class","favoritesButton"),a.setAttribute("id",""+t.favoritesButtonId),!1===t.favoritesButtonState?s.setAttribute("src","../Assets/img_387724.png"):s.setAttribute("src","../Assets/Gold_Star.svg.png"),s.setAttribute("class","favoriteButtonStar")}showTooltip(e,t){const i=document.getElementById(e.tooltipId);let n=i.getBoundingClientRect(),o=t.y-n.height+t.height/2+window.scrollY,r=t.x+t.width/2-n.width/2;i.style.top=""+o,i.style.left=""+r,i.style.visibility="visible"}hideTooltip(e){document.getElementById(e.tooltipId).style.visibility="hidden"}createFavoritesButton(e,t){return new s(e,t)}showFavoritesButton(e,t,i){let n=document.getElementById("t"+t.id).getBoundingClientRect();const o=document.getElementById(t.favoritesButtonId);o.style.top=""+(n.height+i.height/2-55),o.style.left=""+(n.width/2+i.width/2-25),o.style.visibility="visible",o.addEventListener("click",i=>{this.toggleFavoritesButton(e,t)})}hideFavoritesButton(e){document.getElementById(e.favoritesButtonId).style.visibility="hidden"}toggleFavoritesButton(e,t){const i=document.getElementById(t.favoritesButtonId).firstChild;return!0===t.favoritesButtonState?(this.localStorageService.addToStorage(e,t),void i.setAttribute("src","../Assets/Gold_Star.svg.png")):(this.localStorageService.removeFromStorage(e),void i.setAttribute("src","../Assets/img_387724.png"))}}var u=function(e,t,i,n){return new(i||(i=Promise))((function(o,r){function a(e){try{l(n.next(e))}catch(e){r(e)}}function s(e){try{l(n.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))};class h{splitNames(e){return e.split(", ")}}var v=function(e,t,i,n){return new(i||(i=Promise))((function(o,r){function a(e){try{l(n.next(e))}catch(e){r(e)}}function s(e){try{l(n.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))};class g{constructor(){this.movieTitleUrl="https://api.themoviedb.org/3/search/movie?api_key=e73cc9a1d35973b3e89a34bba502663c",this.actorUrl="https://api.themoviedb.org/3/search/person?api_key=e73cc9a1d35973b3e89a34bba502663c",this.categoryUrl="https://api.themoviedb.org/3/genre/movie/list?api_key=e73cc9a1d35973b3e89a34bba502663c",this.globalUrl="",this.discoverUrl="https://api.themoviedb.org/3/discover/movie?api_key=e73cc9a1d35973b3e89a34bba502663c",this.stringUtils=new h}init(){this.globalUrl="",this.globalUrl=this.globalUrl.concat(this.discoverUrl)}appendActorsIfDefined(e){return v(this,void 0,void 0,(function*(){if(e)try{let t=this.stringUtils.splitNames(e),i=[];for(let e=0;e<t.length;e++){let n=encodeURIComponent(t[e]);const o=yield fetch(`${this.actorUrl}&query=${n}`);if(o.ok){let e=yield o.json();i.push(e.results[0].id)}}i.toString(),this.globalUrl=this.globalUrl.concat("&with_cast="+i)}catch(e){console.log(e)}}))}appendCategoryIfDefined(e){return v(this,void 0,void 0,(function*(){if(e)try{const t=[],i=yield fetch(""+this.categoryUrl),n=this.stringUtils.splitNames(e);if(i.ok){(yield i.json()).genres.forEach(e=>{n.forEach(i=>{e.name.toLowerCase()===i&&t.push(e.id)})})}0!==t.length&&(this.globalUrl=this.globalUrl.concat("&with_genres="+t),console.log("Global url",this.globalUrl))}catch(e){console.log(e)}}))}appendYearIfDefined(e){e&&(this.globalUrl=this.globalUrl.concat("&year="+e))}appendRatingIfDefined(e){e&&(this.globalUrl=this.globalUrl.concat("&vote_average.gte="+e))}getGlobalUrl(){return this.globalUrl!==this.discoverUrl?this.globalUrl:void 0}}var p=function(e,t,i,n){return new(i||(i=Promise))((function(o,r){function a(e){try{l(n.next(e))}catch(e){r(e)}}function s(e){try{l(n.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))};var m=function(e,t,i,n){return new(i||(i=Promise))((function(o,r){function a(e){try{l(n.next(e))}catch(e){r(e)}}function s(e){try{l(n.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))};const f=new class{constructor(){this.movieTitleUrl="https://api.themoviedb.org/3/search/movie",this.apiKey="e73cc9a1d35973b3e89a34bba502663c",this.urlBuilderService=new g}searchTitle(e){return p(this,void 0,void 0,(function*(){try{let t=encodeURIComponent(e),i=`${this.movieTitleUrl}?api_key=${this.apiKey}&query=${t}`;const n=yield fetch(i);if(n.ok){return(yield n.json()).results}throw new Error("Request failed!")}catch(e){console.log(e)}}))}search(e,t,i,n){return p(this,void 0,void 0,(function*(){try{this.urlBuilderService.init(),yield this.urlBuilderService.appendYearIfDefined(e),yield this.urlBuilderService.appendRatingIfDefined(t),yield this.urlBuilderService.appendActorsIfDefined(i),yield this.urlBuilderService.appendCategoryIfDefined(n);const o=yield this.urlBuilderService.getGlobalUrl();if(!o)return[];const r=yield fetch(o);if(r.ok){return(yield r.json()).results}}catch(e){console.log(e)}}))}},y=new class{constructor(){this.body=document.body,this.tooltipServices=new d}noResult(){const e=document.body,t=document.createElement("h1");e.appendChild(t),t.setAttribute("id","noResultsMessage"),t.innerHTML="No movies match your search!"}build(e,t){return u(this,void 0,void 0,(function*(){const i=this.returnMaxLength(e,t),n=document.getElementById("body"),o=document.createElement("div");n.appendChild(o),o.setAttribute("class","movieResults");for(let t=0;t<i.titleMaxLenght;t++){const i=yield this.tooltipServices.createTooltipData(e[t]),n=this.tooltipServices.createFavoritesButton(i.movieId,!1);console.log(n),this.buildMovieCard(i,n,"movieResults")}for(let t=0;t<i.searchResultsMaxLength;t++){const i=yield this.tooltipServices.createTooltipData(e[t]),n=this.tooltipServices.createFavoritesButton(i.movieId,!1);this.buildMovieCard(i,n,"movieResults")}}))}buildMovieCard(e,t,i){console.log("build movie card");const n=document.querySelector("."+i),o=document.createElement("div"),r=document.createElement("img"),a=document.createElement("H1"),s=e.id;o.setAttribute("class","movieContainer"),o.setAttribute("id",""+s),n.appendChild(o),o.appendChild(r),o.appendChild(a),r.setAttribute("class","moviePoster"),a.setAttribute("class","movieTitle"),e.poster_path?r.setAttribute("src","https://image.tmdb.org/t/p/original/"+e.poster_path):r.setAttribute("src","https://mymdb.comyn.pw/img/posters/noposter.jpg"),a.innerHTML=e.title+" ",this.tooltipServices.createTooltip(e,t);const l=document.getElementById(t.favoritesButtonId);o.addEventListener("mouseenter",t=>{const i=t.target.getBoundingClientRect();this.tooltipServices.showTooltip(e,i)}),o.addEventListener("mouseenter",i=>{const n=i.target.getBoundingClientRect();this.tooltipServices.showFavoritesButton(e,t,n)}),l.addEventListener("click",i=>{!1===t.favoritesButtonState?t.favoritesButtonState=!0:t.favoritesButtonState=!1,this.tooltipServices.toggleFavoritesButton(e,t)}),o.addEventListener("mouseleave",t=>{this.tooltipServices.hideTooltip(e)}),o.addEventListener("mouseleave",e=>{this.tooltipServices.hideFavoritesButton(t)})}returnMaxLength(e,t){return e.length>10&&t.length>10?{titleMaxLenght:10,searchResultsMaxLength:10}:e.length<10&&t.length>10?{titleMaxLenght:e.length,searchResultsMaxLength:20-e.length}:e.length>10&&t.length<10?{titleMaxLenght:20-t.length,searchResultsMaxLength:t.length}:e.length<10&&t.length<10?{titleMaxLenght:e.length,searchResultsMaxLength:t.length}:(e.length=0)?(t.length=0)?{titleMaxLenght:0,searchResultsMaxLength:0}:t.length>20?{titleMaxLenght:0,searchResultsMaxLength:20}:{titleMaxLenght:0,searchResultsMaxLength:t.length}:(t.length=0)?e.length>20?{titleMaxLenght:20,searchResultsMaxLength:0}:{titleMaxLenght:e.length,searchResultsMaxLength:0}:void 0}},b=new d,S=new l,w=new class{constructor(){}clean(){let e=document.querySelector(".movieResults");e&&e.remove();let t=document.getElementById("noResultsMessage");t&&t.remove();let i=document.querySelector(".favoriteMovies"),n=i.lastElementChild;for(;n;)i.removeChild(n),n=i.lastElementChild}search(){return m(this,void 0,void 0,(function*(){try{let e=document.getElementById("searchTitleInput").value,t=document.getElementById("searchYearInput").value,i=document.getElementById("searchCategoryInput").value,n=document.getElementById("searchRatingInput").value,o=document.getElementById("searchActorsInput").value;if(e||t||i||n||o)if(e)if(t||i||n||o){let r=yield f.searchTitle(e);const a=yield f.search(t,n,o,i);y.build(r,a)}else{let t=yield f.searchTitle(e);0===t.length?y.noResult():y.build(t,[])}else{const e=yield f.search(t,n,o,i);console.log(e),0===e.length?y.noResult():y.build([],e)}else y.noResult();(class{static clearInputs(e){e.forEach(e=>{document.getElementById(e).value=""})}}).clearInputs(["searchTitleInput","searchYearInput","searchCategoryInput","searchRatingInput","searchActorsInput"])}catch(e){console.log(e)}}))}favorites(){return m(this,void 0,void 0,(function*(){const e=S.unpackMoviePackage();if(0===e.length)y.noResult();else for(let t=0;t<e.length;t++){const i=yield b.createTooltipData(e[t]),n=b.createFavoritesButton(e[t].movieId,e[t].favoritesButtonState);y.buildMovieCard(i,n,"favoriteMovies")}}))}};const B=(new class{constructor(){this.awakeHideContainer=new n}intialize(){document.querySelector("#searchButton").addEventListener("click",w.search),document.querySelector("#searchPage").addEventListener("click",this.awakeHideContainer.hideAddContainer),document.querySelector("#searchPage").addEventListener("click",this.awakeHideContainer.hideFavoritesContainer),document.querySelector("#searchPage").addEventListener("click",this.awakeHideContainer.awakeSearchContainer),document.querySelector("#searchPage").addEventListener("click",this.awakeHideContainer.awakeSearchContainer),document.querySelector("#searchPage").addEventListener("click",w.clean),document.querySelector("#addMoviePage").addEventListener("click",this.awakeHideContainer.awakeAddContainer),document.querySelector("#addMoviePage").addEventListener("click",this.awakeHideContainer.hideSearchContainer),document.querySelector("#addMoviePage").addEventListener("click",this.awakeHideContainer.hideFavoritesContainer),document.querySelector("#addMoviePage").addEventListener("click",w.clean),document.querySelector("#favoriteMoviePage").addEventListener("click",this.awakeHideContainer.hideAddContainer),document.querySelector("#favoriteMoviePage").addEventListener("click",this.awakeHideContainer.hideSearchContainer),document.querySelector("#favoriteMoviePage").addEventListener("click",this.awakeHideContainer.awakeFavoritesContainer),document.querySelector("#favoriteMoviePage").addEventListener("click",w.clean),document.querySelector("#favoriteMoviePage").addEventListener("click",w.favorites)}}).intialize()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,